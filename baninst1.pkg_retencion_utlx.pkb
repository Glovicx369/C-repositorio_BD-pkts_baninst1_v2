DROP PACKAGE BODY BANINST1.PKG_RETENCION_UTLX;

CREATE OR REPLACE PACKAGE BODY BANINST1.PKG_RETENCION_UTLX
AS
/******************************************************************************
   NAME:       BANINST1.PKG_RETENCION_UTLX
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        03/02/2023      GOLVERA       1. Created this package.
******************************************************************************/


/*FUNCION BANDERA DE ACTIVACION DE BOTON DE RETENCION*/
FUNCTION F_RETENCION_UTLX (P_PIDM NUMBER) RETURN PKG_RETENCION_UTLX.BAR_OUT
AS

      BANDERA_RETENCION   PKG_RETENCION_UTLX.BAR_OUT;

      v_error        VARCHAR2 (4000);
      BEGIN

  OPEN BANDERA_RETENCION FOR

                SELECT  COUNT(1) APLICA_UTLX,SU.SZTUTLX_ID MATRICULA
        FROM TBRACCD TB
        INNER JOIN SZTUTLX SU ON TB.TBRACCD_PIDM = SU.SZTUTLX_PIDM
        INNER JOIN GORADID GO ON TB.TBRACCD_PIDM = GO.GORADID_PIDM
                              AND GO.GORADID_ADID_CODE != 'RUTX'
        INNER JOIN TZTPADI PD ON TB.TBRACCD_PIDM = PD.TZTPADI_PIDM
                              AND TB.TBRACCD_DETAIL_CODE = PD.TZTPADI_DETAIL_CODE
                              AND PD.TZTPADI_AMOUNT > 0
        WHERE TB.TBRACCD_PIDM = P_PIDM
        AND TB.TBRACCD_DETAIL_CODE IN ( SELECT ZSTPARA_PARAM_ID FROM ZSTPARA
                                        WHERE ZSTPARA_MAPA_ID='RETENCION_UTLX')
        AND SU.SZTUTLX_SEQ_NO = (SELECT MAX(SU1.SZTUTLX_SEQ_NO) FROM SZTUTLX SU1 WHERE SU.SZTUTLX_PIDM  =SU1.SZTUTLX_PIDM  )
        AND SU.SZTUTLX_DISABLE_IND ='A' AND UPPER(SU.SZTUTLX_OBS) LIKE '%SINCROIZADO%'
        AND GO.GORADID_ADID_CODE = 'UTLX'
        AND SU.SZTUTLX_GRATIS IS NULL
        GROUP BY SU.SZTUTLX_ID
        UNION
    SELECT  COUNT(1) APLICA_UTLX,SU.SZTUTLX_ID MATRICULA
        FROM TBRACCD TB
        INNER JOIN SZTUTLX SU ON TB.TBRACCD_PIDM = SU.SZTUTLX_PIDM
        INNER JOIN GORADID GO ON TB.TBRACCD_PIDM = GO.GORADID_PIDM
                              AND GO.GORADID_ADID_CODE != 'RUTX'
        INNER JOIN TZFACCE PF ON TBRACCD_PIDM = PF.TZFACCE_PIDM
                              AND TB.TBRACCD_DETAIL_CODE = PF.TZFACCE_DETAIL_CODE
                              AND PF.TZFACCE_FLAG = 0
                              AND (PF.TZFACCE_AMOUNT - SU.SZTUTLX_ROW3) > 0
        WHERE TB.TBRACCD_PIDM = P_PIDM
        AND TB.TBRACCD_DETAIL_CODE IN ( SELECT ZSTPARA_PARAM_ID FROM ZSTPARA
                                        WHERE ZSTPARA_MAPA_ID='RETENCION_UTLX')
        AND SU.SZTUTLX_SEQ_NO = (SELECT MAX(SU1.SZTUTLX_SEQ_NO) FROM SZTUTLX SU1 WHERE SU.SZTUTLX_PIDM  =SU1.SZTUTLX_PIDM  )
        AND SU.SZTUTLX_DISABLE_IND ='A' AND UPPER(SU.SZTUTLX_OBS) LIKE '%SINCROIZADO%'
        AND GO.GORADID_ADID_CODE ='UTLX'
        AND SU.SZTUTLX_GRATIS IS NULL
        GROUP BY SU.SZTUTLX_ID ;



      RETURN (BANDERA_RETENCION);
   EXCEPTION
      WHEN OTHERS
      THEN
         v_error := 'No se encontraron registros' || SQLERRM;

         OPEN BANDERA_RETENCION FOR SELECT NULL, NULL|| v_error FROM DUAL;

         RETURN (BANDERA_RETENCION);
   END F_RETENCION_UTLX;

  /*FUNCION APLICA BENEFICION DE RETENCION*/
FUNCTION F_MESES_GRATIS (P_PIDM NUMBER, P_APLICA NUMBER)
--P_APLICA 1 APLICA_RETENCION
RETURN VARCHAR2 IS
lv_exito VARCHAR2(5):= '0';
    -- ln_exito      NUMBER(5);    --- 1 : EXITO EN UPDATE , 0 : NO SE REALIZO UPDATE
     v_error       VARCHAR2 (4000);
     ln_gratis     NUMBER(5);
     lv_campus     VARCHAR2(10);
     lv_nivel      VARCHAR2(5);
     ln_seq_max    NUMBER(5);
BEGIN


IF P_APLICA = 1 THEN

            BEGIN
            SELECT MAX(SU.SZTUTLX_SEQ_NO) , SU.SZTUTLX_CAMP_CODE, SU.SZTUTLX_LEVL_CODE
            INTO ln_seq_max , lv_campus, lv_nivel
            FROM SZTUTLX SU
            WHERE SU.SZTUTLX_PIDM = P_PIDM
            AND SU.SZTUTLX_DISABLE_IND ='A'
            AND UPPER(SU.SZTUTLX_OBS) LIKE '%SINCROIZADO%'
            group by SU.SZTUTLX_CAMP_CODE, SU.SZTUTLX_LEVL_CODE;
            END;

            BEGIN
            SELECT ZSTPARA_PARAM_ID
            INTO ln_gratis
             FROM ZSTPARA
             WHERE ZSTPARA_MAPA_ID='MES_RETEN_UTLX'
             AND ZSTPARA_PARAM_DESC = lv_campus
             AND ZSTPARA_PARAM_VALOR = lv_nivel;
             END;


        BEGIN

            UPDATE SZTUTLX SET SZTUTLX_GRATIS =ln_gratis, SZTUTLX_GRATIS_APLI = 0
            WHERE SZTUTLX_PIDM = P_PIDM
            AND SZTUTLX_SEQ_NO = ln_seq_max;


            IF SQL%ROWCOUNT > 0 THEN
                lv_exito := '1';
            END IF;
         COMMIT;
         END;

END IF;

RETURN lv_exito ;

END F_MESES_GRATIS;

END PKG_RETENCION_UTLX;
/

DROP PUBLIC SYNONYM PKG_RETENCION_UTLX;

CREATE OR REPLACE PUBLIC SYNONYM PKG_RETENCION_UTLX FOR BANINST1.PKG_RETENCION_UTLX;


GRANT EXECUTE, DEBUG ON BANINST1.PKG_RETENCION_UTLX TO PUBLIC;
